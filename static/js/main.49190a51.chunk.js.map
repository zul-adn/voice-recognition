{"version":3,"sources":["store/app/index.js","store/createStore.js","store/app/action.js","assets/gif/loading.gif","components/RootApp.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","datas_chat","isLoadingChat","reducer","combineReducers","app","state","action","type","concat","datas","store","createStore","applyMiddleware","thunk","storeDataChat","payload","setLoading","connect","dispatch","storeChat","axios","post","text","then","res","lastIndex","data","messages","length","console","log","React","useState","words","setWords","recog","window","speechRecognition","webkitSpeechRecognition","useEffect","onstart","onresult","event","current","resultIndex","message","results","transcript","className","map","v","i","is_user","src","loadgif","size","color","onClick","start","value","placeholder","onChange","e","target","App","Store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49190a51.chunk.js","sourcesContent":["const initialState = {\n    datas_chat: [],\n    isLoadingChat: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'STORE_CHAT':\n            return {\n                ...state,\n                datas_chat: state.datas_chat.concat(action.datas),\n                isLoadingChat: true,\n            }\n        case 'LOADING':\n            return {\n                ...state,\n                isLoadingChat: false,\n            }\n        default:\n            return state\n    }\n}","import {compose, createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\nimport app from './app';\n\nconst reducer = combineReducers({\n    app,\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;","import axios from 'axios';\n\nconst url = 'https://tegiai-gi4coglcca-de.a.run.app';\n\nconst storeDataChat = (payload) => ({ type: 'STORE_CHAT', datas: payload })\nconst setLoading = () => ({ type: 'LOADING' })\n\n\nexport const storeChat = (payload) => {\n    return (dispatch) => {\n        dispatch(storeDataChat(payload))\n        axios.post(`${url}/add_input`, {\n            'text' : payload.text\n        })\n            .then(res => {\n                dispatch(setLoading)\n                let lastIndex = res.data.messages.length - 1\n                console.log(res.data.messages[lastIndex])\n                dispatch(storeDataChat(res.data.messages[lastIndex]))\n                // readIttLoud(res.data.messages[lastIndex].text)\n                console.log(lastIndex)\n            })\n    }\n}\n\n","export default __webpack_public_path__ + \"static/media/loading.b25e7f61.gif\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { storeChat } from './../store/app/action';\nimport { FaPlay, FaMicrophone } from \"react-icons/fa\";\nimport axios from 'axios';\n\nimport loadgif from './../assets/gif/loading.gif'\n\n\nexport const RootApp = ({ datas_chat, storeChat, isLoadingChat }) => {\n    const [words, setWords] = React.useState('')\n    const SpeechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\n    const recog = new SpeechRecognition()\n\n    React.useEffect(() => {\n        console.log(isLoadingChat)\n        axios.post('https://tegiai-gi4coglcca-de.a.run.app/reset')\n    }, [])\n\n    const start = () => {\n        recog.start()\n    }\n\n    recog.onstart = function () {\n        console.log(\"Voice is activated\")\n    }\n\n    recog.onresult = function (event) {\n        const current = event.resultIndex;\n        const message = event.results[current][0].transcript\n        setWords(message)\n        // readIttLoud(message)\n        // setIsTalk(false)\n        storeChat({ 'is_user': true, \"text\": message })\n        setWords('')\n    }\n\n\n    const sendquestion = () => {\n        storeChat({ 'is_user': true, \"text\": words })\n        console.log(datas_chat)\n        setWords('')\n    }\n\n    return (\n        <div className=\"container\">\n            {/* <button className=\"btn\" onClick={start}  disabled = {isTalk} ><BiMicrophone size={60} color=\"white\" /></button>\n        <h3 style={{ color:'#636e72' }}> {isTalk ? \"Talking...\" : \"Click button above to talk\"} </h3>\n        <h2>{words}</h2> */}\n            <div className=\"chat-box\">\n                <div className=\"ballon-container\">\n\n                    {datas_chat.length === 0 ?\n                        <div className=\"no-msg\"><span>No Message</span></div>\n                        :\n                        datas_chat.map((v, i) =>\n                            v.is_user ?\n                                <div className=\"ballon\" key={i}>\n                                    <div className=\"ballon-ava-left\">\n\n                                    </div>\n                                    <div className=\"ballon-text-left\">\n                                        <span>{v.text}</span>\n                                    </div>\n                                </div>\n                                :\n                                <div className=\"ballon\" key={i}>\n\n                                    <div className=\"ballon-text-right\">\n                                        <span>{v.text}</span>\n                                    </div>\n                                    <div className=\"ballon-ava-right\">\n\n                                    </div>\n                                </div>\n                        )\n                    }\n                    {isLoadingChat ?\n                        <div className=\"reply-loading\">\n                            <img src={loadgif} />\n                        </div>\n                        :\n                        \"\"\n                    }\n\n                </div>\n            </div>\n            <div className=\"text-box\">\n                <div className=\"rec-container\">\n                    <FaMicrophone size={25} color=\"red\" onClick={start} />\n                </div>\n                <div className=\"input-container\">\n                    <input type=\"text\" value={words} placeholder=\"Input your message here\" onChange={(e) => setWords(e.target.value)} />\n                </div>\n\n                <div className=\"button-container\">\n                    <button onClick={sendquestion}><FaPlay size={15} color=\"white\" /></button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ app }) => {\n    return {\n        datas_chat: app.datas_chat,\n        isLoadingChat: app.isLoadingChat\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        storeChat: (payload) => dispatch(storeChat(payload)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootApp)","import './App.css';\nimport { Provider } from 'react-redux';\n\nimport Store from './store/createStore';\nimport RootApp from './components/RootApp';\n\nfunction App() {\n\n  // React.useEffect(() => {\n  //   axios.post('https://tegiai-gi4coglcca-de.a.run.app/reset')\n  // }, [])\n\n  // const [isTalk, setIsTalk] = React.useState(false)\n  \n  // const [msg, setMsg] = React.useState([])\n\n \n\n  \n  // const getBot = (texts) => {\n  //   const text = {\n  //     texts\n  //   }\n  //   axios.post('https://tegiai-gi4coglcca-de.a.run.app/add_input', {\n  //     \"text\" : texts\n  //   })\n  //   .then(res => {\n  //     let lastIndex = res.data.messages.length - 1\n  //     msg.push(res.data.messages[lastIndex])\n  //     readIttLoud(res.data.messages[lastIndex].text)\n  //     console.log(lastIndex)\n  //   })\n  // }\n  \n\n  \n\n  // const reset = () => {\n  //   alert(\"tes\")\n  // }\n\n  // const readIttLoud = (message) => {\n\n  //   const speech = new SpeechSynthesisUtterance();\n  //   speech.text = message;\n  //   speech.volume = 1;\n  //   speech.rate = 1;\n  //   speech.pitch = 1;\n\n  //   window.speechSynthesis.speak(speech)\n  // }\n\n\n\n\n  return (\n    <Provider store={Store}>\n        <RootApp />\n    </Provider>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}